@using Type.Models
@page "/products"

<PageTitle>Product</PageTitle>
<h1>Product</h1>
<hr />
<!-- Button trigger modal -->
<button type="button" class="btn btn-primary" @onclick="OpenNewModal">محصول جدید</button>

<!-- Modal Component -->
<Modal Show="OpenModal" OnClose="CloseModal" OnSave="Save" Title="@modalTitle">
    <div class="col">
        <div class="row">
            <InputText class="form-control" @bind-Value="tableModel.Name" placeholder="نام محصول را وارد کنید " />
        </div>
        <div class="row" style="margin-top: 5px;">
            <InputNumber class="form-control" @bind-Value="tableModel.Price" placeholder="قیمت محصول را وارد کنید " />
        </div>
        <div class="row" style="margin-top: 5px;">
            <select class="form-select" aria-label="Default select example" @bind="tableModel.Type">
                <option selected disabled>گروه محصول خود را وارد کنید</option>
                @if (typeModels != null)
                {
                    @foreach (var type in typeModels)
                    {
                        <option value="@type.NameType">@type.NameType</option>
                    }
                }
            </select>
        </div>
    </div>
</Modal>

@if (tableModels == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Price</th>
                <th>Type</th>
                <th>Edit</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (TableModel item in tableModels)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Name</td>
                    <td>@item.Price</td>
                    <td>@item.Type</td> <!-- نمایش نام نوع محصول -->
                    <td>
                        <button class="btn btn-success" @onclick="() => EditP(item)">ویرایش</button>
                    </td>
                    <td><button class="btn btn-danger" @onclick="() => Del(item)">حذف</button></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private bool OpenModal = false;
    private string modalTitle = "";
    private IEnumerable<TableModel> tableModels { get; set; }
    private IEnumerable<TypeModel> typeModels { get; set; }
    private TableModel tableModel = new();

    private async void Save()
    {
        if (tableModel.Id > 0)
        {
            await _dsProduct.TableChange(2, tableModel);
        }
        else
        {
            await _dsProduct.TableChange(1, tableModel);
        }
        tableModels = await _dsProduct.Table1Select();
        tableModel = new();
        OpenModal = false;
        this.StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        tableModels = await _dsProduct.Table1Select();
        typeModels = await _dsProduct.TypeSelect();
    }

    private async void SaveEdit(TableModel tm)
    {
        await _dsProduct.TableChange(2, tm);
        tableModels = await _dsProduct.Table1Select();
        OpenModal = false;
        this.StateHasChanged();
    }

    private async void Del(TableModel tm)
    {
        await _dsProduct.TableChange(3, tm);
        tableModels = await _dsProduct.Table1Select();
        this.StateHasChanged();
    }

    private void OpenNewModal()
    {
        tableModel = new TableModel();
        modalTitle = "محصول جدید";
        OpenModal = true;
    }

    private void EditP(TableModel _tm)
    {
        tableModel = _tm;
        modalTitle = "ویرایش محصول";
        OpenModal = true;
    }

    private void CloseModal()
    {
        OpenModal = false;
    }
}
