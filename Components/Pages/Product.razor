@using Type.Models
@page "/products"
@inject IDataServiceProduct _dsProduct


<PageTitle>Product</PageTitle>
<h1>Product</h1>
<hr />
<!-- Button trigger modal -->
<button type="button" class="btn btn-primary" @onclick="OpenNewModal">محصول جدید</button>

<!-- Modal Component -->
<Modal Show="OpenModal" OnClose="CloseModal" OnSave="Save" Title="@modalTitle">
    <EditForm Model="@tableModel" OnValidSubmit="@Save">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="col">
            <div class="row">
                <InputText class="form-control" @bind-Value="tableModel.Name" placeholder="نام محصول را وارد کنید " />
            </div>
            <div class="row" style="margin-top: 5px;">
                <InputNumber class="form-control" @bind-Value="tableModel.Price" placeholder="قیمت محصول را وارد کنید " />
            </div>
            <div class="row" style="margin-top: 5px;">
                <InputSelect class="form-select" aria-label="Default select example" @bind-Value="tableModel.IdType">
                    <option selected disabled>گروه محصول خود را وارد کنید</option>
                    @if (typeModels != null)
                    {
                        @foreach (var type in typeModels)
                        {
                            <option value="@type.IdType">@type.NameType</option>
                        }
                    }
                </InputSelect>
            </div>
        </div>
    </EditForm>
</Modal>

@if (productModels == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Price</th>
                <th>Type</th>
                <th>Time Add</th>
                <th>Time Update</th>
                <th>Edit</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (ProductModel item in productModels)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Name</td>
                    <td>@item.Price</td>
                    <td>@item.NameType</td>
                    @* <td>@item.TimeAdd</td>
                    <td>@item.TimeUpdate</td> *@
                    <td>
                        <button class="btn btn-success" @onclick="() => EditP(item)">ویرایش</button>
                    </td>
                    <td><button class="btn btn-danger" @onclick="() => Del(item)">حذف</button></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private bool OpenModal = false;
    private string modalTitle = "";
    private IEnumerable<ProductModel> productModels { get; set; }
    private IEnumerable<TypeModel> typeModels { get; set; }
    private TableModel tableModel = new();

    private async void Save()
    {
        if (tableModel.Id > 0)
        {
            // tableModel.TimeUpdate = DateTime.Now;
            await _dsProduct.ProductChange(2, tableModel);
        }
        else
        {
            // tableModel.TimeAdd = DateTime.Now;
            await _dsProduct.ProductChange(1, tableModel);
        }
        productModels = await _dsProduct.ProductModelSelect();
        tableModel = new();
        OpenModal = false;
    }

    protected override async Task OnInitializedAsync()
    {
        productModels = await _dsProduct.ProductModelSelect();
        typeModels = await _dsProduct.TypeSelect();
    }

    private async void Del(ProductModel tm)
    {
        tableModel.Id = tm.Id;
        await _dsProduct.ProductChange(3, tableModel);
        productModels = await _dsProduct.ProductModelSelect();
    }

    private void OpenNewModal()
    {
        modalTitle = "محصول جدید";
        OpenModal = true;
    }

    private void EditP(ProductModel _tm)
    {
        tableModel.Id = _tm.Id;
        tableModel.Name = _tm.Name;
        tableModel.Price = _tm.Price;
        tableModel.IdType = _tm.IdType;
        tableModel.TimeAdd = _tm.TimeAdd;
        modalTitle = "ویرایش محصول";
        OpenModal = true;
    }

    private void CloseModal()
    {
        tableModel = new TableModel();
        OpenModal = false;
    }
}
